<?xml version="1.0"?>
<!-- ====================================================================== 

     Build file for LibusbJava Shared Library
     
     REQUIREMENTS:
     	winres (only on windows)
     	g++

     http://libusbJava.sourceforge.net                                                                
     ====================================================================== -->
<project name="LibusbJava" basedir=".">
	<description>
            Build file for LibusbJava Shared Library
    </description>

	<property file="project.properties" />
	<property file="version.properties" />
	<property name="version.win.rc" value="${version.major},${version.minor},${version.micro},${version.nano}" />
	<property name="version.win.str" value="${version.major}.${version.minor}.${version.micro}.${version.nano}" />
	<property name="version.linux" value="${version.major}.${version.minor}.${version.micro}" />

	<patternset id="buildfiles">
		<include name="**/*.o" />
		<include name="**/*.dll" />
		<include name="**/*.so.*" />
	</patternset>

	<target name="clean" description="--> Clean build files">
		<delete>
			<fileset dir=".">
				<patternset refid="buildfiles" />
			</fileset>
		</delete>
	</target>

	<target name="windows" description="--> Build ${build.shlib.win.shlibname}">
		<!-- The RC_VERSION_STR string is not recognized by windres as command line argument.
			I think this is a bug. The only (nasty) workaround I found is to write it directly to the file. -->
		<!--
		<exec dir="." executable="${build.win.windres}">
			<arg value="-o${build.win.resource.obj}" />
			<arg value="${build.win.resource.rc}" />
			<arg value="-DRC_VERSION=${version.rc}" />
			<arg value="-DRC_VERSION_STR=&apos;\&quot;${version.str}\&quot;&apos;" />
		</exec>
		-->
		<echo level="warning" message="WARNING: If the version has changed -> change the RC_VERSION_STR define in resource.rc to &quot;${version.win.str}&quot;" />
		<exec dir="." executable="${build.win.windres}">
			<arg value="-o${build.win.resource.obj}" />
			<arg value="${build.win.resource.rc}" />
			<arg value="-DRC_VERSION=${version.win.rc}" />
		</exec>
		<exec dir="." executable="${build.win.compiler}">
			<arg value="-Wall" />
			<arg value="-D_JNI_IMPLEMENTATION_" />
			<arg value="-Wl,--kill-at" />
			<arg value="-mwindows" />
			<arg value="-shared" />
			<arg value="-I${basedir}" />
			<arg value="${build.shlib.srcname}" />
			<arg value="-o${build.shlib.win.shlibname}" />
			<arg value="${build.win.resource.obj}" />
			<arg value="${build.lib.libusb}" />
		</exec>
	</target>

	<target name="linux" depends="clean" description="--> Build ${build.shlib.linux.shlibname}">
		<exec dir="." executable="${build.linux.compiler}">
			<arg value="-shared" />
			<arg value="-Wl,-soname,${build.shlib.linux.shlibname}" />
			<arg value="-I${build.linux.includes}" />
			<arg value="-shared" />
			<arg value="${build.shlib.srcname}" />
			<arg value="-o${build.shlib.linux.shlibname}.${version.linux}" />
			<arg value="${build.linux.includes}/${build.lib.libusb}" />
			<arg value="${build.linux.includes}/${build.lib.libusbpp}" />
		</exec>
	</target>

	<target name="mac" depends="clean" description="--> Build ${build.shlib.mac.shlibname}">
		<exec dir="." executable="${build.mac.compiler}">
			<!-- arguments to pass to gcc -->
			<arg value="-v" />
			<arg value="-dynamiclib" />
			<arg line="-I ${build.mac.jni}" />
			<arg value="${build.shlib.srcname}" />
			<arg line="-o ${build.shlib.mac.shlibname}" />
			<arg line="-current_version ${version.mac}" />
			<arg line="-l ${build.mac.stdclib}" />
			<arg value="${build.mac.includes}/${build.mac.lib.libusb}" />
			<arg value="${build.mac.includes}/${build.mac.lib.libusbpp}" />
		</exec>
	</target>
	
</project>
